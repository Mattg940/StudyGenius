rules_version = '2';
service cloud.firestore {
	match /databases/{database}/documents {
		function hasRole(role) {
			return request.auth.token.role == role || request.auth.token.role == 'admin';
		}

		match /users/{uid} {
			allow read: if request.auth != null && (request.auth.uid == uid || hasRole('teacher') || hasRole('admin'));
			allow write: if request.auth != null && request.auth.uid == uid;
		}

		match /classes/{classId} {
			allow read: if request.auth != null;
			allow write: if hasRole('teacher');
		}

		match /assignments/{assnId} {
			allow read: if request.auth != null;
			allow write: if hasRole('teacher');
		}

		match /submissions/{subId} {
			allow read: if request.auth != null && (resource.data.studentId == request.auth.uid || hasRole('teacher'));
			allow write: if request.auth != null && request.resource.data.studentId == request.auth.uid;
		}

		match /threads/{threadId} {
			allow read, write: if request.auth != null && request.resource.data.memberIds.hasAny([request.auth.uid]) ;
		}

		match /messages/{msgId} {
			allow read: if request.auth != null && exists(/databases/$(database)/documents/threads/$(request.resource.data.threadId));
			allow write: if request.auth != null && request.resource.data.senderId == request.auth.uid;
		}

		match /leaderboards/{scope} {
			allow read: if true;
			allow write: if false;
		}

		match /snapJobs/{jobId} {
			allow read, write: if request.auth != null && request.resource.data.userId == request.auth.uid;
		}

		match /auditLogs/{id} {
			allow read, write: if hasRole('admin');
		}
	}
}